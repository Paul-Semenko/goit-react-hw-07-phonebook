{"version":3,"sources":["components/Filter/style.module.css","components/ContactList/style.module.css","redux/actions.js","redux/operations.js","redux/reducers.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/Style.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","getContacts","createAsyncThunk","_","a","rejectWithValue","get","data","message","addContacts","contact","post","deleteContacts","contactId","delete","id","contactSlice","createSlice","name","initialState","loading","error","extraReducers","pending","state","action","fulfilled","payload","rejected","filter","filterReducer","createReducer","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","concat","logger","devTools","process","getContact","getFilteredContacts","createSelector","items","el","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handleInputChange","event","currentTarget","value","onSubmit","evt","preventDefault","find","alert","className","style","form","form__title","type","pattern","title","required","onChange","form__input","form__button","ContactList","contactFilter","useEffect","contacts__list","map","contacts__item","onClick","contact__button","Filter","htmlFor","filter__title","autoComplete","e","target","toLocaleLowerCase","filter__input","App","contacts__title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2596865c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"style_filter__title__1Tunt\",\"filter__input\":\"style_filter__input__2M2qL\",\"contacts__title\":\"style_contacts__title__2qnv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__button\":\"style_contact__button__3dhDF\",\"contacts__list\":\"style_contacts__list__3nwJ6\",\"contacts__item\":\"style_contacts__item__L5X6z\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction('changeFilter');","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://619d60fa131c600017088edc.mockapi.io';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n    'contacts/getContacts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const {data} = await axios.get('/contacts');\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\nexport const addContacts = createAsyncThunk(\r\n    'contacts/addContacts',\r\n    async (contact, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/contacts', contact);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\nexport const deleteContacts = createAsyncThunk(\r\n    'contacts/deleteContacts',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n            const { data: { id } } = await axios.delete(`/contacts/${contactId}`);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n      }\r\n    },\r\n);","import { createReducer, createSlice } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./actions\";\r\nimport { addContacts, deleteContacts, getContacts } from \"./operations\";\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState: {\r\n        contact: [],\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    extraReducers: {\r\n        [getContacts.pending]: (state, action) => ({\r\n            ...state, loading: true,\r\n        }),\r\n        [getContacts.fulfilled]: (state, action) => ({\r\n            ...state, contact: action.payload, loading: false,\r\n        }),\r\n        [getContacts.rejected]: (state, action) => ({\r\n            ...state, loading: false, error: action.payload,\r\n            \r\n        }),\r\n        [addContacts.pending]: (state, action) => {\r\n            return { ...state, loading: true, };\r\n        },\r\n        [addContacts.fulfilled]: (state, action) => {\r\n            return {\r\n                ...state, contact: [...state.contact, action.payload],\r\n                loading: false,\r\n            };\r\n        },\r\n        [addContacts.rejected]: (state, action) => {\r\n            return {\r\n                ...state, loading: false, error: action.payload,\r\n            };\r\n        },\r\n        [deleteContacts.pending]: (state, action) => ({\r\n            ...state, loading: true,\r\n        }),\r\n        [deleteContacts.fulfilled]: (state, action) => ({\r\n            ...state, contact: state.contact.filter(({ id }) => id !== action.payload),\r\n            loading: false,\r\n        }),\r\n        [deleteContacts.rejected]: (state, action) => ({\r\n            ...state, loading: false, error: action.payload,\r\n        }),\r\n    }\r\n});\r\n\r\n\r\nexport default contactSlice.reducer;\r\n\r\nexport const filterReducer = createReducer('', {\r\n    \r\n    [changeFilter]: (_, action) => action.payload,\r\n    \r\n});","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport contactSlice, { filterReducer } from \"./reducers\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactSlice,\r\n        filter:filterReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n    \r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\n\r\nexport default store;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContact = state => state.contacts.contact;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getContact, getFilter],\r\n    (items, filter) => items.filter((el) => el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContacts } from '../../redux/operations';\r\nimport { getContact } from '../../redux/selectors';\r\nimport style from './Style.module.css';\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n    const contacts = useSelector(getContact);\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    \r\n    const handleInputChange = (event) => {\r\n        if (event.currentTarget.name === 'name') {\r\n            setName(event.currentTarget.value);\r\n        } else if (event.currentTarget.name === 'number') {\r\n            setNumber(event.currentTarget.value);\r\n    }\r\n        \r\n    };\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      dispatch(addContacts({ name, number }));\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  };\r\n\r\n     \r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}\r\n                className={style.form}>\r\n                <h1>Phonebook</h1>\r\n                <label className={style.form__title}>Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        \r\n                        className={style.form__input}\r\n                        \r\n                    />\r\n                </label>\r\n                <label className={style.form__title}>Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={handleInputChange}                        \r\n                        className={style.form__input}\r\n                    />\r\n                </label>\r\n                <button className={style.form__button}>Add contact</button>\r\n            </form>\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { getContacts, deleteContacts } from '../../redux/operations';\r\nimport { getFilteredContacts } from \"../../redux/selectors\";\r\nimport style from './style.module.css';\r\n\r\n\r\n export default function  ContactList () {\r\n \r\n   const dispatch = useDispatch();\r\n   const contactFilter = useSelector(getFilteredContacts);\r\n  \r\n   useEffect(() => {\r\n     dispatch(getContacts());\r\n     \r\n   }, [dispatch]);\r\n\r\n    return (\r\n      <ul className={style.contacts__list} >\r\n        {contactFilter.map((el) => (\r\n          <li key={el.id} className={style.contacts__item}>\r\n            {el.name} : {el.number}\r\n           <button\r\n              type=\"button\"\r\n              id={el.id}\r\n              onClick={() => dispatch(deleteContacts(el.id))}\r\n                    className={style.contact__button}\r\n            >\r\n              Delete\r\n            </button>\r\n            </li>            \r\n        ))}\r\n            \r\n        </ul>\r\n         \r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport style from './style.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  \r\n    return (\r\n      <>\r\n        <label htmlFor=\"search\" className={style.filter__title}>\r\n          Find contacts by name\r\n        \r\n        <input\r\n          \r\n                    autoComplete=\"off\"\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(changeFilter(e.target.value.toLocaleLowerCase()));\r\n                    }}\r\n                    className={style.filter__input}\r\n            ></input>\r\n            </label>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\nimport style from './components/Filter/style.module.css';\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList  from './components/ContactList/ContactList';\nimport Filter from \"./components/Filter/Filter\";\n\n\nexport default function App() {\n  \nreturn (\n      <div>\n        <ContactForm/>\n        <h2 className={style.contacts__title}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n\n  \n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Style_form__2dSn4\",\"form__title\":\"Style_form__title__2Z62O\",\"form__input\":\"Style_form__input__3EnQ_\",\"form__button\":\"Style_form__button__2mTbW\"};"],"sourceRoot":""}